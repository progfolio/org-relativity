* Goal
To make it easier to schedule tasks relative to one another.

* Implementation
Initial implementation will not use org timestamp syntax.
For now, we focus on functionality and defining the features/problem space.
However, it would be nice to have a syntax for these features that is similar to the existing timestamp syntax.

Every relative timestamp must have a target.
The target determines the relative task's time.
The target may be a relative timestamp itself.

** Targets
*** id
Scheduled relative to entry with ID.
*** parent
Scheduled relative to its parent
*** sibling
Scheduled relative to its sibling
*** First available
Scheduled in first available time slot of the day
*** Last available
Scheduled in last available time slot of the day
go to end of day and subtract duration if present
*** time
Schedule relative to a fixed time?
* data representation?
Use a single property with a plist?
#+begin_src emacs-lisp
:relativity: (:target "1a2b3c4d" :scheduled "+1h" :deadline "+2h"
#+end_src
#+begin_example
,** TODO test
:PROPERTIES:
:Effort:   0:30
:relativity: (:target "1a2b3c4d" :deadline "+1h")
:END:
#+end_example
* Feature                                                           :feature:
** IDEA only modify timestamp with matching type

e.g. if Modifying CLOSED time, only modify close times
Same for SCHEDULED vs. DEADLINE
* Bug                                                                   :bug:
** RESEARCH why can't we use simple :after advice?
Seems to destroy &optional arg being passed through to the advised function.
* Miscellaneous                                               :miscellaneous:
** RESEARCH list of all commands we want to advise
